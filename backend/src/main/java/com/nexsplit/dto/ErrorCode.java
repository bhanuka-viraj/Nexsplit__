package com.nexsplit.dto;

public enum ErrorCode {
    // Authentication Errors
    AUTH_TOKEN_EXPIRED("AUTH_001", "AUTHENTICATION_ERROR"),
    AUTH_INVALID_CREDENTIALS("AUTH_002", "AUTHENTICATION_ERROR"),
    AUTH_TOKEN_INVALID("AUTH_003", "AUTHENTICATION_ERROR"),
    AUTH_REFRESH_TOKEN_EXPIRED("AUTH_004", "AUTHENTICATION_ERROR"),
    AUTH_OAUTH2_FAILED("AUTH_005", "AUTHENTICATION_ERROR"),

    // Authorization Errors
    AUTHZ_INSUFFICIENT_PERMISSIONS("AUTHZ_001", "AUTHORIZATION_ERROR"),
    AUTHZ_NEX_ACCESS_DENIED("AUTHZ_002", "AUTHORIZATION_ERROR"),
    AUTHZ_ADMIN_REQUIRED("AUTHZ_003", "AUTHORIZATION_ERROR"),
    AUTHZ_SETTLEMENT_DENIED("AUTHZ_004", "AUTHORIZATION_ERROR"),

    // User Management Errors
    USER_NOT_FOUND("USER_001", "BUSINESS_ERROR"),
    USER_ALREADY_EXISTS("USER_002", "BUSINESS_ERROR"),
    USER_EMAIL_NOT_VERIFIED("USER_003", "BUSINESS_ERROR"),
    USER_ACCOUNT_DEACTIVATED("USER_004", "BUSINESS_ERROR"),
    USER_EMAIL_EXISTS("USER_005", "BUSINESS_ERROR"),
    USER_USERNAME_EXISTS("USER_006", "BUSINESS_ERROR"),
    USER_PASSWORD_INVALID("USER_007", "BUSINESS_ERROR"),
    USER_PASSWORD_WEAK("USER_008", "BUSINESS_ERROR"),
    USER_INVALID_CREDENTIALS("USER_009", "BUSINESS_ERROR"),
    USER_INVALID_TOKEN("USER_010", "BUSINESS_ERROR"),
    USER_EMAIL_ALREADY_VERIFIED("USER_011", "BUSINESS_ERROR"),

    // Nex (Expense Group) Errors
    NEX_NOT_FOUND("NEX_001", "BUSINESS_ERROR"),
    NEX_MEMBER_LIMIT_EXCEEDED("NEX_002", "BUSINESS_ERROR"),
    NEX_ALREADY_MEMBER("NEX_003", "BUSINESS_ERROR"),
    NEX_NOT_MEMBER("NEX_004", "BUSINESS_ERROR"),
    NEX_ARCHIVED("NEX_005", "BUSINESS_ERROR"),

    // Expense Errors
    EXPENSE_NOT_FOUND("EXP_001", "BUSINESS_ERROR"),
    EXPENSE_AMOUNT_INVALID("EXP_002", "BUSINESS_ERROR"),
    EXPENSE_CATEGORY_NOT_FOUND("EXP_003", "BUSINESS_ERROR"),
    EXPENSE_PAYER_NOT_MEMBER("EXP_004", "BUSINESS_ERROR"),
    EXPENSE_SPLIT_INVALID("EXP_005", "BUSINESS_ERROR"),

    // Debt/Settlement Errors
    DEBT_NOT_FOUND("DEBT_001", "BUSINESS_ERROR"),
    DEBT_ALREADY_SETTLED("DEBT_002", "BUSINESS_ERROR"),
    SETTLEMENT_INVALID_AMOUNT("DEBT_003", "BUSINESS_ERROR"),

    // Category Errors
    CATEGORY_NOT_FOUND("CAT_001", "BUSINESS_ERROR"),
    CATEGORY_NAME_EXISTS("CAT_002", "BUSINESS_ERROR"),
    CATEGORY_HAS_EXPENSES("CAT_003", "BUSINESS_ERROR"),
    AUTHZ_CATEGORY_ACCESS_DENIED("AUTHZ_004", "AUTHORIZATION_ERROR"),

    // Validation Errors
    VALIDATION_REQUIRED_FIELD("VAL_001", "VALIDATION_ERROR"),
    VALIDATION_INVALID_FORMAT("VAL_002", "VALIDATION_ERROR"),
    VALIDATION_INVALID_EMAIL("VAL_003", "VALIDATION_ERROR"),
    VALIDATION_INVALID_PASSWORD("VAL_004", "VALIDATION_ERROR"),
    VALIDATION_INVALID_AMOUNT("VAL_005", "VALIDATION_ERROR"),

    // System Errors
    INTERNAL_SERVER_ERROR("SYS_001", "SYSTEM_ERROR"),
    EXTERNAL_SERVICE_UNAVAILABLE("SYS_002", "SYSTEM_ERROR"),
    DATABASE_CONNECTION_ERROR("SYS_003", "SYSTEM_ERROR"),
    EMAIL_SERVICE_ERROR("SYS_004", "SYSTEM_ERROR"),
    FILE_UPLOAD_ERROR("SYS_005", "SYSTEM_ERROR"),

    // Attachment Errors
    ATTACHMENT_INVALID_FILE("ATT_001", "ATTACHMENT_ERROR"),
    ATTACHMENT_UPLOAD_FAILED("ATT_002", "ATTACHMENT_ERROR"),
    ATTACHMENT_DELETE_FAILED("ATT_003", "ATTACHMENT_ERROR"),
    ATTACHMENT_NOT_FOUND("ATT_004", "ATTACHMENT_ERROR"),

    // Notification Errors
    NOTIFICATION_NOT_FOUND("NOTIF_001", "BUSINESS_ERROR"),

    // Bill Errors
    BILL_NOT_FOUND("BILL_001", "BUSINESS_ERROR"),
    BILL_PARTICIPANT_NOT_FOUND("BILL_002", "BUSINESS_ERROR"),
    BILL_AMOUNT_INVALID("BILL_003", "BUSINESS_ERROR"),
    BILL_DUE_DATE_INVALID("BILL_004", "BUSINESS_ERROR"),
    BILL_ALREADY_PAID("BILL_005", "BUSINESS_ERROR"),
    BILL_RECURRING_INVALID("BILL_006", "BUSINESS_ERROR"),
    BILL_NEX_ID_REQUIRED("BILL_007", "BUSINESS_ERROR"),
    BILL_PERSONAL_NO_NEX("BILL_008", "BUSINESS_ERROR"),

    // CDN Errors
    CDN_CONFIGURATION_INVALID("CDN_001", "CDN_ERROR"),
    CDN_UPLOAD_FAILED("CDN_002", "CDN_ERROR"),
    CDN_DOWNLOAD_FAILED("CDN_003", "CDN_ERROR"),
    CDN_DELETE_FAILED("CDN_004", "CDN_ERROR"),

    // Rate Limiting Errors
    RATE_LIMIT_EXCEEDED("RATE_001", "RATE_LIMIT_ERROR");

    private final String code;
    private final String type;

    ErrorCode(String code, String type) {
        this.code = code;
        this.type = type;
    }

    public String getCode() {
        return code;
    }

    public String getType() {
        return type;
    }
}
